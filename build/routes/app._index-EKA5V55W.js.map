{
  "version": 3,
  "sources": ["../../../app/routes/app._index.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/app._index.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/app._index.jsx\");\n  import.meta.hot.lastModified = \"1690734700163.337\";\n}\n// REMIX HMR END\n\nimport { useEffect } from \"react\";\nimport { json } from \"@remix-run/node\";\nimport { useActionData, useLoaderData, useNavigation, useSubmit } from \"@remix-run/react\";\nimport { Page, Layout, Text, VerticalStack, Card, Button, HorizontalStack, Box, Divider, List, Link } from \"@shopify/polaris\";\nimport { authenticate } from \"../shopify.server\";\nexport const loader = async ({\n  request\n}) => {\n  const {\n    session\n  } = await authenticate.admin(request);\n  return json({\n    shop: session.shop.replace(\".myshopify.com\", \"\")\n  });\n};\nexport async function action({\n  request\n}) {\n  const {\n    admin\n  } = await authenticate.admin(request);\n  const color = [\"Red\", \"Orange\", \"Yellow\", \"Green\"][Math.floor(Math.random() * 4)];\n  const response = await admin.graphql(`#graphql\n      mutation populateProduct($input: ProductInput!) {\n        productCreate(input: $input) {\n          product {\n            id\n            title\n            handle\n            status\n            variants(first: 10) {\n              edges {\n                node {\n                  id\n                  price\n                  barcode\n                  createdAt\n                }\n              }\n            }\n          }\n        }\n      }`, {\n    variables: {\n      input: {\n        title: `${color} Snowboard`,\n        variants: [{\n          price: Math.random() * 100\n        }]\n      }\n    }\n  });\n  const responseJson = await response.json();\n  return json({\n    product: responseJson.data.productCreate.product\n  });\n}\nexport default function Index() {\n  _s();\n  const nav = useNavigation();\n  const {\n    shop\n  } = useLoaderData();\n  const actionData = useActionData();\n  const submit = useSubmit();\n  const isLoading = [\"loading\", \"submitting\"].includes(nav.state) && nav.formMethod === \"POST\";\n  const productId = actionData?.product?.id.replace(\"gid://shopify/Product/\", \"\");\n  useEffect(() => {\n    if (productId) {\n      shopify.toast.show(\"Product created\");\n    }\n  }, [productId]);\n  const generateProduct = () => submit({}, {\n    replace: true,\n    method: \"POST\"\n  });\n  return <Page>\n      <ui-title-bar title=\"Remix app template\">\n        <button variant=\"primary\" onClick={generateProduct}>\n          Generate a product\n        </button>\n      </ui-title-bar>\n      <VerticalStack gap=\"5\">\n        <Layout>\n          <Layout.Section>\n            <Card>\n              <VerticalStack gap=\"5\">\n                <VerticalStack gap=\"2\">\n                  <Text as=\"h2\" variant=\"headingMd\">\n                    Congrats on creating a new Shopify app \uD83C\uDF89\n                  </Text>\n                  <Text variant=\"bodyMd\" as=\"p\">\n                    This embedded app template uses{\" \"}\n                    <Link url=\"https://shopify.dev/docs/apps/tools/app-bridge\" target=\"_blank\">\n                      App Bridge\n                    </Link>{\" \"}\n                    interface examples like an{\" \"}\n                    <Link url=\"/app/additional\">\n                      additional page in the app nav\n                    </Link>\n                    , as well as an{\" \"}\n                    <Link url=\"https://shopify.dev/docs/api/admin-graphql\" target=\"_blank\">\n                      Admin GraphQL\n                    </Link>{\" \"}\n                    mutation demo, to provide a starting point for app\n                    development.\n                  </Text>\n                </VerticalStack>\n                <VerticalStack gap=\"2\">\n                  <Text as=\"h3\" variant=\"headingMd\">\n                    Get started with products\n                  </Text>\n                  <Text as=\"p\" variant=\"bodyMd\">\n                    Generate a product with GraphQL and get the JSON output for\n                    that product. Learn more about the{\" \"}\n                    <Link url=\"https://shopify.dev/docs/api/admin-graphql/latest/mutations/productCreate\" target=\"_blank\">\n                      productCreate\n                    </Link>{\" \"}\n                    mutation in our API references.\n                  </Text>\n                </VerticalStack>\n                <HorizontalStack gap=\"3\" align=\"end\">\n                  {actionData?.product && <Button url={`https://admin.shopify.com/store/${shop}/admin/products/${productId}`} target=\"_blank\">\n                      View product\n                    </Button>}\n                  <Button loading={isLoading} primary onClick={generateProduct}>\n                    Generate a product\n                  </Button>\n                </HorizontalStack>\n                {actionData?.product && <Box padding=\"4\" background=\"bg-subdued\" borderColor=\"border\" borderWidth=\"1\" borderRadius=\"2\" overflowX=\"scroll\">\n                    <pre style={{\n                  margin: 0\n                }}>\n                      <code>{JSON.stringify(actionData.product, null, 2)}</code>\n                    </pre>\n                  </Box>}\n              </VerticalStack>\n            </Card>\n          </Layout.Section>\n          <Layout.Section secondary>\n            <VerticalStack gap=\"5\">\n              <Card>\n                <VerticalStack gap=\"2\">\n                  <Text as=\"h2\" variant=\"headingMd\">\n                    App template specs\n                  </Text>\n                  <VerticalStack gap=\"2\">\n                    <Divider />\n                    <HorizontalStack align=\"space-between\">\n                      <Text as=\"span\" variant=\"bodyMd\">\n                        Framework\n                      </Text>\n                      <Link url=\"https://remix.run\" target=\"_blank\">\n                        Remix\n                      </Link>\n                    </HorizontalStack>\n                    <Divider />\n                    <HorizontalStack align=\"space-between\">\n                      <Text as=\"span\" variant=\"bodyMd\">\n                        Database\n                      </Text>\n                      <Link url=\"https://www.prisma.io/\" target=\"_blank\">\n                        Prisma\n                      </Link>\n                    </HorizontalStack>\n                    <Divider />\n                    <HorizontalStack align=\"space-between\">\n                      <Text as=\"span\" variant=\"bodyMd\">\n                        Interface\n                      </Text>\n                      <span>\n                        <Link url=\"https://polaris.shopify.com\" target=\"_blank\">\n                          Polaris\n                        </Link>\n                        {\", \"}\n                        <Link url=\"https://shopify.dev/docs/apps/tools/app-bridge\" target=\"_blank\">\n                          App Bridge\n                        </Link>\n                      </span>\n                    </HorizontalStack>\n                    <Divider />\n                    <HorizontalStack align=\"space-between\">\n                      <Text as=\"span\" variant=\"bodyMd\">\n                        API\n                      </Text>\n                      <Link url=\"https://shopify.dev/docs/api/admin-graphql\" target=\"_blank\">\n                        GraphQL API\n                      </Link>\n                    </HorizontalStack>\n                  </VerticalStack>\n                </VerticalStack>\n              </Card>\n              <Card>\n                <VerticalStack gap=\"2\">\n                  <Text as=\"h2\" variant=\"headingMd\">\n                    Next steps\n                  </Text>\n                  <List spacing=\"extraTight\">\n                    <List.Item>\n                      Build an{\" \"}\n                      <Link url=\"https://shopify.dev/docs/apps/getting-started/build-app-example\" target=\"_blank\">\n                        {\" \"}\n                        example app\n                      </Link>{\" \"}\n                      to get started\n                    </List.Item>\n                    <List.Item>\n                      Explore Shopify\u2019s API with{\" \"}\n                      <Link url=\"https://shopify.dev/docs/apps/tools/graphiql-admin-api\" target=\"_blank\">\n                        GraphiQL\n                      </Link>\n                    </List.Item>\n                  </List>\n                </VerticalStack>\n              </Card>\n            </VerticalStack>\n          </Layout.Section>\n        </Layout>\n      </VerticalStack>\n    </Page>;\n}\n_s(Index, \"vHedw1/d8zDlDW4hLpoFobsbUyo=\", false, function () {\n  return [useNavigation, useLoaderData, useActionData, useSubmit];\n});\n_c = Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
